# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
name: "Build-Pipeline"

on:
  #schedule:
  #  - cron: '35 6 * * *'
  push:
    branches: [ master ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ master ]

jobs:

  build-docker-distribution:
    runs-on: ubuntu-latest
    environment: dockerhub
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Coursier cache
        uses: coursier/cache-action@v6
      - name: SBT Build
        run: sbt assembly
      - name: Cleanup before cache
        shell: bash
        run: |
          rm -rf "$HOME/.ivy2/local" || true
          find $HOME/Library/Caches/Coursier/v1        -name "ivydata-*.properties" -delete || true
          find $HOME/.ivy2/cache                       -name "ivydata-*.properties" -delete || true
          find $HOME/.cache/coursier/v1                -name "ivydata-*.properties" -delete || true
          find $HOME/.sbt                              -name "*.lock"               -delete || true
      - name: Build Tags
        id: build_tags
        run: |
          export COMMIT=${GITHUB_SHA::7}
          export COMMIT_TAG=$(if [[ $GITHUB_REF == refs/tags/* ]]; then echo ${GITHUB_REF#refs/tags/} | tr "/" "."; else echo ""; fi)
          export COMMIT_BRANCH=$(if [[ $GITHUB_REF == refs/heads/* ]]; then echo ${GITHUB_REF#refs/heads/} | tr "/" "."; else echo "br"; fi)
          export TAG=`if [ ! -z "$COMMIT_TAG" ]; then echo "$COMMIT_TAG"; else echo "$COMMIT_BRANCH-$COMMIT"; fi`
          echo GITHUB_REF=$GITHUB_REF
          echo GITHUB_REF#refs/tags/=GITHUB_REF#refs/tags/
          echo GITHUB_REF#refs/heads/=GITHUB_REF#refs/heads/
          echo GITHUB_SHA=$GITHUB_SHA
          echo COMMIT=$COMMIT
          echo COMMIT_TAG=$COMMIT_TAG
          echo COMMIT_BRANCH=$COMMIT_BRANCH
          echo TAG=$TAG
          echo ::set-output name=SHA_TAG::$GITHUB_SHA
          echo ::set-output name=DOCKER_TAG::$TAG
          echo ::set-output name=SOURCE_TAG::COMMIT_TAG
          echo ::set-output name=SOURCE_BRANCH::$COMMIT_BRANCH

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_ACCESSTOKEN }}
      - name: Build, Tag & Push Dockerfile
        run: |
          docker build -t luechtdiode/mobile-queue:latest .
          docker tag luechtdiode/mobile-queue:latest luechtdiode/mobile-queue:$TAG
          docker push luechtdiode/mobile-queue:latest
          docker push luechtdiode/mobile-queue:$TAG
          echo "$TAG is built properly and pushed to Dockerhub"
        env:
          TAG: ${{ steps.build_tags.outputs.DOCKER_TAG }}
